@model Sunglasses___Web.Models.CartModel

@{
    ViewBag.Title = "Количка";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@section header
{
    <link href="~/Content/als.css" rel="stylesheet" />
    <link href="~/Scripts/sunglasses/touchTouch.css" rel="stylesheet" />
    <link href="~/Content/purple.css" rel="stylesheet" />
}

@using (Html.BeginForm("PreOrder", "Cart", FormMethod.Post, new { id = "frmCart" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <section class="panel clearfix">
        <h2>Количка</h2>
        <hr />
        <table>
            <thead>
                <tr>
                    <th>Продукт</th>
                    <th>Допълнение</th>
                    <th>Премахни</th>
                    <th>Количество</th>
                    <th>Единична Цена</th>
                    <th>Общо</th>
                </tr>
            </thead>
            @for (var product = 0; product < @Model.Products.Count; product++)
            {
                <tr>
                    <td>
                        @Html.Partial("_ProductShort", @Model.Products[product].Product)
                        @Html.HiddenFor(x => x.Products[product].Product.Id)
                        @Html.HiddenFor(x => x.Products[product].Product.Image)
                        @Html.HiddenFor(x => x.Products[product].Product.Model)
                        @Html.HiddenFor(x => x.Products[product].Product.NewPrice)
                        @Html.HiddenFor(x => x.Products[product].Product.OldPrice)
                        @Html.HiddenFor(x => x.Products[product].Product.Rate)
                        @Html.HiddenFor(x => x.Products[product].Product.Discount)
                        @Html.HiddenFor(x => x.Products[product].Product.Brand)
                    </td>
                    <td>
                        @Html.DisplayFor(x => x.Products[product].AdditionalInformation)
                        @Html.HiddenFor(x=>x.Products[product].AdditionalInformation)
                    </td>
                    <td>
                        <a href="#" data-productid="@Model.Products[product].Product.Id" class="remove">Премахни</a>
                    </td>
                    <td>
                        @Html.TextBoxFor(x => x.Products[product].Quantity, new { type = "number",  min="0", max="5", @class="input-number text-box single-line valid"})
                    </td>
                    <td>
                        @Html.DisplayFor(x => x.Products[product].Product.NewPrice) лв.
                    </td>
                    <td>
                        @{ decimal? cost = Model.Products[product].Product.NewPrice * Model.Products[product].Quantity;                      
                        }@cost  лв.
                    </td>
                </tr>
            }
        </table>

        <p class="align-right title-big">
            Сума за плащане: @Html.DisplayFor(x => x.Cost) лв.
            @Html.HiddenFor(x => x.Cost)
        </p>
    </section>
    <section class="panel clearfix">
        <h2>Отстъпка</h2>
        <hr />
        <p class="p-panel">
            @Html.LabelFor(x => x.DiscountCode, new { @class = "bold" })
            @Html.EditorFor(x => x.DiscountCode)
            @Html.ValidationMessageFor(x => x.DiscountCode)
        </p>
    </section>
    <section class="panel clearfix">
        <h2>Начин на плащане</h2>
        <hr />
        <ul class="search-criteria p-panel">
            <li class="search-input-holder">
                @Html.RadioButtonFor(x => x.PaymentMethod, '1', new { name = "payment", id = "nalojen", @checked = "checked" })
                <label for="nalojen">Чрез наложен платеж при получаване</label>
            </li>
            <li class="search-input-holder">
                @Html.RadioButtonFor(x => x.PaymentMethod, '2', new { name = "payment", id = "borika" })
                <label for="borika">Чрез система за разплащане БОРИКА</label>
            </li>
        </ul>
    </section>
    
    <section class="panel clearfix">
        <h2>Данни за доставката</h2>
        <hr />
        <p class="p-panel">
            @Html.LabelFor(x => x.CustomerName, new { @class = "bold" })
            @Html.EditorFor(x => x.CustomerName)
            @Html.ValidationMessageFor(x => x.CustomerName)
        </p>
        <p class="p-panel">
            @Html.LabelFor(x => x.CustomerEmail, new { @class = "bold" })
            @Html.EditorFor(x => x.CustomerEmail)
            @Html.ValidationMessageFor(x => x.CustomerEmail, "Невалиден email.")
        </p>
        <p class="p-panel">
            @Html.LabelFor(x => x.CustomerPhone, new { @class = "bold" })
            @Html.EditorFor(x => x.CustomerPhone)
            @Html.ValidationMessageFor(x => x.CustomerPhone)
        </p>
        <p class="p-panel">
            @Html.LabelFor(x => x.CustomerAddress, new { @class = "bold" })
            @Html.EditorFor(x => x.CustomerAddress)
            @Html.ValidationMessageFor(x => x.CustomerAddress)
        </p>
        <input type="submit" value="Поръчай" id="" class="button-green-big right">
    </section>
}
@section scripts
{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/sunglasses/jquery.icheck.min.js"></script>
    <script>
        $(document).ready(function () {
            $('input').iCheck({
                checkboxClass: 'icheckbox_minimal-purple',
                radioClass: 'iradio_minimal-purple',
                increaseArea: '20%'
            });

            $('.remove').on('click', function (e) {
                e.preventDefault();
                removeItemFromCart($(this).data("productid"));
                console.log($(this).data("productid"));
                $(this).parent().parent().fadeOut('slow', function () {
                    $(this).remove();
                });
            });
        });
        function removeItemFromCart(id) {
            var db = localStorage.getItem("sunglasses-cart");
            var cart = JSON.parse(db);
            for (var i = 0; i < cart.products.length; i++) {
                if (cart.products[i].productId == id) {
                    cart.products.splice(i, 1);
                    i--;
                }
            }
            localStorage.setItem("sunglasses-cart", JSON.stringify(cart));
            updateCartCountUI();

            updateCartUrl();
        }
    </script>
}
